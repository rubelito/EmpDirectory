@using BCS.Application.Entity
@using BCS.HtmlHelpers
@model BCS.Models.EditUserModel

@using (Html.BeginForm(FormMethod.Post))
{
    <fieldset>
        <legend> Edit user</legend>
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.UserName)
        <div class="row">
            <div class="col-lg-4 col-md-5 col-sm-5 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(m => m.UserName, "UserName")<span> : @Model.UserName </span>

                </div>
                <div class=editor-label>
                    @Html.LabelFor(m => m.UserType, "User Type")<span class="field-required"> *</span>
                    <br />
                    @Html.EnumDropDownListFor(m => m.UserType, (userType) => { return userType != UserType.Admin; }, "Select Type", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserType, "The Position field is required", new { @class = "danger-red-text" })
                </div>
            </div>
        </div>
        <br />
        <text>Details</text>
        <hr />
        <div class="row">
            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(m => m.FirstName, "FirstName")<span class="field-required"> *</span>
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessage("FirstName", new { @class = "danger-red-text" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.LastName, "LastName")<span class="field-required"> *</span>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessage("LastName", new { @class = "danger-red-text" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Language, "Language")
                    @Html.TextBoxFor(m => m.Language, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-4 col-md-5 col-sm-5 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(m => m.PhoneNumber, "PhoneNumber")<span class="field-required"> *</span>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessage("PhoneNumber", new { @class = "danger-red-text" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.BirthDate, "BirthDate")
                    @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control datepicker" })
                    @Html.ValidationMessage("BirthDate", new { @class = "danger-red-text" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.HobbiesAndInterest, "Hobbies And Interest")
                    @Html.TextAreaFor(m => m.HobbiesAndInterest, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(m => m.CivilStatus, "CivilStatus")
                    @Html.EnumDropDownListFor(m => m.CivilStatus, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Gender, "Gender")<span class="field-required"> *</span>
                    @Html.EnumDropDownListFor(m => m.Gender, htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor(m => m.Address, "Address")
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-4 col-md-5 col-sm-5 col-xs-12">
                @*<div class="editor-label">
            @Html.LabelFor(m => m.Country, "Country")<span class="field-required"> *</span>
            @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
            @Html.ValidationMessage("Country", new { @class = "danger-red-text" })
        </div>*@
                <div class=editor-label>
                    @Html.LabelFor(m => m.Country, "Country")<span class="field-required"> *</span>
                    <br />
                    @Html.ValidationMessage("Country", new { @class = "danger-red-text" })
                    @Html.DropDownListFor(m => m.Country, new SelectList(Model.Countries, "name", "name", Model.Country), "---Select Country---", htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor(m => m.State, "State")<span class="field-required"> *</span>
                    @Html.TextBoxFor(m => m.State, new { @class = "form-control" })
                    @Html.ValidationMessage("State", new { @class = "danger-red-text" })
                </div>

                <select id="StateDropDown" class="form-control"></select>

            </div>
        </div>


        @* <div class=editor-label>
                @Html.LabelFor(m => m.Positions, "Positions")
                <br />
                @Html.DropDownListFor(m => m.SelectedPositionId, new SelectList(Model.Positions, "Value", "Text", Model.SelectedPositionId), "---Select Position---")
                @Html.ValidationMessageFor(m => m.SelectedPositionId, "The Position field is required", new { @class = "danger-red-text" })
            </div>*@
        <br />
        <input type="submit" value="Edit" />
    </fieldset>
}

    <script src="~/Content/scripts/AddEdit.js"></script>